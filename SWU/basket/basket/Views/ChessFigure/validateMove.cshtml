@model List<string>

@{
    var figures = new Dictionary<string, string>();

    foreach (var entry in Model)
    {
        var parts = entry.Split(' ');
        if (parts.Length == 2)
        {
            var pieceName = parts[0];
            var position = parts[1].ToUpper();
            figures[position] = pieceName;
        }
    }
}

<style>
    table {
        border-collapse: collapse;
    }

    td {
        width: 60px;
        height: 60px;
        text-align: center;
        vertical-align: middle;
        border: 1px solid black;
    }

    .white {
        background-color: #eee;
    }

    .black {
        background-color: #888;
    }

    .has-figure {
        outline: 2px solid gold;
        outline-offset: -4px;
    }
</style>

<table>
    @for (int row = 0; row < 8; row++)
    {
        <tr>
            @for (int col = 0; col < 8; col++)
            {
                char colChar = (char)('A' + col);
                int rowNum = 8 - row;
                string pos = $"{colChar}{rowNum}";
                string color = (row + col) % 2 == 0 ? "white" : "black";
                bool hasFigure = figures.ContainsKey(pos);
                string extraClass = hasFigure ? "has-figure" : "";

                <td class="@color @extraClass">
                    @if (hasFigure)
                    {
                        var piece = figures[pos];
                        var imagePath = Url.Content($"~/img/{piece.ToLower()}.jpg");
                        <img src="@imagePath" alt="@piece" style="width: 100%; height: auto;" />

                    }
                    else
                    {
                        @pos
                    }
                </td>
            }
        </tr>
    }
</table>
